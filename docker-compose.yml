services:

  mongo1:
    hostname: ${DOCKER_MONGO_HOSTNAME}
    image: mongo:4.2.23-bionic
    expose:
      - ${DOCKER_MONGO_PORT}
    restart: unless-stopped
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo ${DOCKER_MONGO_HOSTNAME}:${DOCKER_MONGO_PORT}/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
      args:
        - BUILD_CONTEXT=frontend
        - DOCKER_FRONTEND_HOST_PORT=${DOCKER_FRONTEND_HOST_PORT}
    volumes:
      - ./packages/config:/packages/config
    environment:
      REACT_APP_API_BASE: http://${DOCKER_BACKEND_HOST}:${DOCKER_BACKEND_PORT}/${DOCKER_BACKEND_API_VERSION}
    ports:
      - '${DOCKER_FRONTEND_CONTAINER_PORT}:${DOCKER_FRONTEND_HOST_PORT}'
    depends_on:
      backend:
        condition: service_healthy

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./backend/Dockerfile
      args:
        - BUILD_CONTEXT=backend
        - DOCKER_BACKEND_APP_PORT=${DOCKER_BACKEND_APP_PORT}
        - DOCKER_MONGO_PORT=${DOCKER_MONGO_PORT}
        - DOCKER_MONGO_URL=mongodb://${DOCKER_MONGO_HOSTNAME}:${DOCKER_MONGO_PORT}?directConnection=true
    environment:
      NODE_ENV: production
      PORT: ${DOCKER_BACKEND_APP_PORT}
    ports:
      - '${DOCKER_BACKEND_PORT}:${DOCKER_BACKEND_PORT}'
    links:
      - ${DOCKER_MONGO_HOSTNAME}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${DOCKER_BACKEND_HOST}:${DOCKER_BACKEND_PORT}/health"]
      interval: 20s
      timeout: 15s
      retries: 5
    depends_on:
      mongo1:
        condition: service_healthy
